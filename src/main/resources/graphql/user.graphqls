type User {
    id: String
    firstName: String
    lastName: String
    email: String
    phone: String
    bonus: Int
    language: Language
    addresses: [Address!]!
}

extend type Query {
    userInfo: User
}

type Mutation {
    user(userInput: UserInput!): User!
    login(authInput: AuthInput!): JwtResponse!
    refreshAccessToken(refreshToken: String!): JwtResponse!
    updateUser(userUpdateInput: UserUpdateInput!): User!
}

input UserUpdateInput {
    phone: String
    firstName: String
    lastName: String
    language: String
}

input AuthInput {
    email: String!
    password: String!
}

input UserInput {
    password: String!
    email: String!
}

type UserRole {
    id: ID!
    role: Role!
}

type JwtResponse {
    accessToken: String!
    refreshToken: String!
}

input RefreshTokenInput {
    token: String!
}
