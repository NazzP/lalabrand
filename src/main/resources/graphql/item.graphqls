type Item {
    id: ID!
    title: String!,
    shortDisc: String!,
    longDisc: String,
    rating: String,
    price: Float!,
    availableCount: Int!,
    salePrice: Float,
    soldCount: Int!,
    materials: [ItemsMaterials!]!
    itemInfos: [ItemInfo!]!
}


input ItemInput {
    title: String!,
    shortDisc: String!,
    longDisc: String,
    rating: String,
    price: Float!,
    availableCount: Int!,
    categoryName: String!,
    salePrice: Float,
    soldCount: Int!
}

input FilterItemInput {
    categoryName: String
    sizeId: String
    typeOfPriceSort: String
    color: Color
}

extend type Query {
    bestSellers(limit: Int): PageOfItems!,
    itemsByTitle(title: String!, language: Language!, paginationRequest: PaginationRequest!): PageOfItems!,
    itemsByCategoryName(categoryName: String!, paginationRequest: PaginationRequest!): PageOfItems!,
    itemById(itemId: ID!): Item!
    itemsFilter(filterRequest: FilterItemInput!): [Item!]!
}

type PageOfItems {
    totalPages: Int!,
    totalCount: Int!,
    items: [Item!]!
}

extend type Mutation {
    item(itemInput: ItemInput!): Item!
}
