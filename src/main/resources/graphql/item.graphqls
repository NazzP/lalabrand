type Item {
    id: ID!
    title: String!,
    shortDisc: String!,
    longDisc: String,
    rating: String,
    price: Float!,
    availableCount: Int!,
    salePrice: Float,
    soldCount: Int!,
    materials: [ItemsMaterials!]!
    itemInfos: [ItemInfo!]!
}

input ItemInput {
    title: String!,
    shortDisc: String!,
    longDisc: String,
    rating: String,
    price: Float!,
    availableCount: Int!,
    categoryId: String!,
    salePrice: Float,
    soldCount: Int!
}

extend type Query {
    bestSellers(limit: Int): PageOfItems!,
    itemsByTitle(title: String!, language: Language!, paginationRequest: PaginationRequest!): PageOfItems!,
    itemsByCategoryId(categoryId: ID!, paginationRequest: PaginationRequest!): PageOfItems!,
    itemById(itemId: ID!): Item!
}

type PageOfItems {
    totalPages: Int!,
    totalCount: Int!,
    items: [Item!]!
}

extend type Mutation {
    item(itemInput: ItemInput!): Item!
}
